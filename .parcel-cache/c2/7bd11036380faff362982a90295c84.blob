"use strict";

var _q = require("q");

var modal = _interopRequireWildcard(require("./modal.js"));

var _mapView = _interopRequireDefault(require("./Views/mapView.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

const getCoords = async function () {
  try {
    const cords = await modal.getCurrentUserLocation();

    _mapView.default.displayMap(cords);
  } catch (err) {
    console.log(err.message);
  }
};

const createWorkoutType = function (coords, type, distance, duration, effort) {
  modal.addWorkoutData(coords, type, distance, duration, effort);
  const workout = modal.workouts[modal.workouts.length - 1];

  _mapView.default.renderWorkout(workout);
};

const init = async function () {
  await getCoords();

  _mapView.default.displayFormOnClick();

  _mapView.default.displayWorkoutOnSubmit(createWorkoutType);

  _mapView.default.toggleEffortOnType();
};

init();